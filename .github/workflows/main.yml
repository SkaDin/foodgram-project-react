name: Foodgram-project workflow


on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python

      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        cd backend/
        pip install -r requirements.txt

    - name: Test with flake8 
      run: python -m flake8
  
  build_and_push_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secreets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action
        with:
          push: true
          file: backend/Dockerfile 
          tags: ${{ secrets.DOCKER_USERNAME }}/food_backend:latest
          file: frontend/Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/food_frontend:latest
  
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build_and_push_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-actions@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker-compose stop food_backend
            sudo docker-compose rm food_backend
            touch .env
            echo DB_ENGINE = ${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME = ${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER = ${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRESS_PASSWORD = ${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST = ${{ secrets.DB_HOST }} >> .env
            echo DB_PORT = ${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d --build
